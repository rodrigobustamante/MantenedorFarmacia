//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mantenedor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Web.Mvc;

    public partial class Usuario
    {
        public int IdUsuario { get; set; }
        [StringLength(30, MinimumLength = 3, ErrorMessage = "Nombre del trabajador invalido")]
        [RegularExpression(@"^[a-zA-Z ñáéíóúÑ]+$", ErrorMessage = "Ingrese solamente letras")]
        public string Nombre { get; set; }
        [StringLength(30, MinimumLength = 3, ErrorMessage = "Apellido del trabajador invalido")]
        [RegularExpression(@"^[a-zA-Z\s ñáéíóúÑ]+$", ErrorMessage = "Ingrese solamente letras")]
        public string Apellido { get; set; }
        [Required(ErrorMessage = "Ingrese el correo electrónico", AllowEmptyStrings = false)]
        [StringLength(30, MinimumLength = 3, ErrorMessage = "Correo electrónico del trabajador invalido")]
        [DataType(DataType.EmailAddress, ErrorMessage = "Correo electrónico invalido")]
        public string Correo { get; set; }
        [Required(ErrorMessage = "Ingrese una contraseña", AllowEmptyStrings = false)]
        [StringLength(30, MinimumLength = 6, ErrorMessage = "La contraseña debe tener como minimo 6 carácteres")]
        public string Contrasena { get; set; }
        [StringLength(11, MinimumLength = 11, ErrorMessage = "Formato valido: 569XXXXXXXX")]
        [RegularExpression(@"^[0-9]+$", ErrorMessage = "Ingrese solamente numeros")]
        public string Telefono { get; set; }
        [StringLength(70, MinimumLength = 6, ErrorMessage = "La direccion debe tener como mínimo 6 carácteres")]
        public string Direccion { get; set; }
        public int IdComuna { get; set; }
        public int IdCiudad { get; set; }
        public int IdSucursal { get; set; }
        public int IdCargo { get; set; }
        public int IdContrato { get; set; }
    
        public virtual Cargo Cargo { get; set; }
        public virtual Ciudad Ciudad { get; set; }
        public virtual Comuna Comuna { get; set; }
        public virtual Contrato Contrato { get; set; }
        public virtual Sucursal Sucursal { get; set; }

        public Usuario Existe(Usuario u)
        {
            Usuario user;
            using (var context = new MantenedorEntities())
            {
                user = context.Usuario.Where(uu => uu.Correo.Equals(u.Correo) && uu.Contrasena.Equals(u.Contrasena)).FirstOrDefault();
            }
            return user;
        }
    }
}
